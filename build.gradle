plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id "com.adarshr.test-logger" version "3.2.0"
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'io.github.drednote'
version = ''

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
    withSourcesJar()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    nexusRepo = System.getenv("NEXUS_REPO") ?: System.getProperty("NEXUS_REPO") ?: NEXUS_REPO
    nexusRepoSnap = System.getenv("NEXUS_REPO_SNAPSHOTS") ?: System.getProperty("NEXUS_REPO_SNAPSHOTS") ?: NEXUS_REPO_SNAPSHOTS
    nexusUser = System.getenv("NEXUS_USER") ?: System.getProperty("NEXUS_USER") ?: NEXUS_USER
    nexusPassword = System.getenv("NEXUS_PASSWORD") ?: System.getProperty("NEXUS_PASSWORD") ?: NEXUS_PASSWORD
}

repositories {
    mavenCentral()
    maven {
        name "nexus"
        url nexusRepo
        allowInsecureProtocol true
        credentials {
            username nexusUser
            password nexusPassword
        }
    }
    maven {
        name "nexus-snap"
        url nexusRepoSnap
        allowInsecureProtocol true
        credentials {
            username nexusUser
            password nexusPassword
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
    resolutionStrategy {
        cacheDynamicVersionsFor 5, 'minutes'
        cacheChangingModulesFor 0, 'minutes'
    }
}

tasks.register('sourceJar', Jar) {
    from sourceSets.main.allJava
}

// todo delete if not needed
publishing {
    repositories {
        maven {
            url System.getProperty("NEXUS_UPLOAD_REPO") ?: NEXUS_UPLOAD_REPO
            allowInsecureProtocol true
            credentials {
                username System.getProperty("NEXUS_USER") ?: NEXUS_USER
                password System.getProperty("NEXUS_PASSWORD") ?: NEXUS_PASSWORD
            }
        }
    }
    publications {
        create('mavenJava', MavenPublication) {
            groupId group
            artifactId archivesBaseName
            version System.getProperty("generatedVersion") ?: "master-SNAPSHOT"

            from components.java
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/html')
        }
    }
}
